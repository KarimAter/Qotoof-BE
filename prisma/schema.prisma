// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// TO UPDATE SCHEMA
// npx prisma migrate dev --name init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Beneficiary {
  id             Int       @id @unique @default(autoincrement())
  short_name     String    @unique
  first_name     String?
  last_name      String?
  full_name      String?
  age            Int?
  marital_status String?
  address        String?
  Expense        Expense[]
  created_at     DateTime  @default(now())
  updated_at     DateTime  @updatedAt
}

model Donor {
  id          Int        @id @unique @default(autoincrement())
  short_name  String     @unique
  referral    Referral   @relation(fields: [referral_id], references: [id])
  donations   Donation[]
  referral_id Int
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
}

model DonationCategory {
  id         Int        @id @default(autoincrement())
  name       String     @unique
  carryover  Float
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  donations  Donation[]
  Expense    Expense[]
}

model ExpenseCategory {
  id         Int       @id @default(autoincrement())
  name       String    @unique
  carryover  Float
  expenses   Expense[]
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
}

model Donation {
  id                   String           @id @default(uuid())
  date                 DateTime?
  amount               Float
  donation_category    DonationCategory @relation(fields: [donation_category_id], references: [id])
  donor                Donor            @relation(fields: [donor_id], references: [id])
  donation_category_id Int
  donor_id             Int
  created_at           DateTime         @default(now())
  updated_at           DateTime         @updatedAt
}

model Expense {
  id                   String           @id @default(uuid())
  date                 DateTime?
  amount               Float
  donation_category    DonationCategory @relation(fields: [donation_category_id], references: [id])
  expense_category     ExpenseCategory  @relation(fields: [expense_category_id], references: [id])
  beneficiary          Beneficiary      @relation(fields: beneficiary_id, references: id, onDelete: Cascade, onUpdate: Cascade)
  user                 User             @relation(fields: [user_id], references: [id])
  status               String?
  payment_type         String?
  comment              String?
  project              String?
  user_id              Int
  beneficiary_id       Int
  donation_category_id Int
  expense_category_id  Int
  created_at           DateTime         @default(now())
  updated_at           DateTime         @updatedAt
}

model User {
  id                Int       @id @unique @default(autoincrement())
  short_name        String    @unique
  email             String?
  password          String?
  role              UserRole
  recieved_expenses Expense[]
  created_at        DateTime  @default(now())
  updated_at        DateTime  @updatedAt
}

model Referral {
  id              Int      @id @unique @default(autoincrement())
  short_name      String   @unique
  first_name      String?
  last_name       String?
  referred_donors Donor[]
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt
}

enum UserRole {
  SUPER
  ADMIN
  EDITOR
  GUEST
}
